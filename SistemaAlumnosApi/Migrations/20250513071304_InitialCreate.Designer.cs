// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaAlumnosApi.Data;

#nullable disable

namespace SistemaAlumnosApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250513071304_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaAlumnosApi.Models.Alumno", b =>
                {
                    b.Property<int>("AlumnoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlumnoID"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AlumnoID");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Asignacion", b =>
                {
                    b.Property<int>("AsignacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsignacionID"));

                    b.Property<int>("AlumnoID")
                        .HasColumnType("int");

                    b.Property<int>("MateriaID")
                        .HasColumnType("int");

                    b.HasKey("AsignacionID");

                    b.HasIndex("AlumnoID");

                    b.HasIndex("MateriaID");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Calificacion", b =>
                {
                    b.Property<int>("CalificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalificacionID"));

                    b.Property<int>("AlumnoID")
                        .HasColumnType("int");

                    b.Property<int>("ExamenID")
                        .HasColumnType("int");

                    b.Property<float>("Nota")
                        .HasColumnType("real");

                    b.HasKey("CalificacionID");

                    b.HasIndex("AlumnoID");

                    b.HasIndex("ExamenID");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Examen", b =>
                {
                    b.Property<int>("ExamenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamenID"));

                    b.Property<DateTime>("FechaAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MateriaID")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamenID");

                    b.HasIndex("MateriaID");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Materia", b =>
                {
                    b.Property<int>("MateriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MateriaID"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MateriaID");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Pregunta", b =>
                {
                    b.Property<int>("PreguntaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreguntaID"));

                    b.Property<int>("ExamenID")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PreguntaID");

                    b.HasIndex("ExamenID");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Respuesta", b =>
                {
                    b.Property<int>("RespuestaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RespuestaID"));

                    b.Property<bool>("EsCorrecta")
                        .HasColumnType("bit");

                    b.Property<int>("PreguntaID")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RespuestaID");

                    b.HasIndex("PreguntaID");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Asignacion", b =>
                {
                    b.HasOne("SistemaAlumnosApi.Models.Alumno", "Alumno")
                        .WithMany("Asignaciones")
                        .HasForeignKey("AlumnoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaAlumnosApi.Models.Materia", "Materia")
                        .WithMany("Asignaciones")
                        .HasForeignKey("MateriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Calificacion", b =>
                {
                    b.HasOne("SistemaAlumnosApi.Models.Alumno", "Alumno")
                        .WithMany("Calificaciones")
                        .HasForeignKey("AlumnoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaAlumnosApi.Models.Examen", "Examen")
                        .WithMany("Calificaciones")
                        .HasForeignKey("ExamenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Examen", b =>
                {
                    b.HasOne("SistemaAlumnosApi.Models.Materia", "Materia")
                        .WithMany("Examenes")
                        .HasForeignKey("MateriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Pregunta", b =>
                {
                    b.HasOne("SistemaAlumnosApi.Models.Examen", "Examen")
                        .WithMany("Preguntas")
                        .HasForeignKey("ExamenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Respuesta", b =>
                {
                    b.HasOne("SistemaAlumnosApi.Models.Pregunta", "Pregunta")
                        .WithMany("Respuestas")
                        .HasForeignKey("PreguntaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Alumno", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Examen", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Materia", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("Examenes");
                });

            modelBuilder.Entity("SistemaAlumnosApi.Models.Pregunta", b =>
                {
                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
